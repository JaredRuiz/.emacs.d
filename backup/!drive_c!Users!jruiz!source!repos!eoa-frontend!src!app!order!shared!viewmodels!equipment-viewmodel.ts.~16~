import { Equipment } from '@app/order/shared/contracts/equipment';
import { EquipmentCardModel } from '@app/shared-ui/equipment-card-model';
import { CommentViewModel } from '@app/order/shared/viewmodels/comment-viewmodel';
import { ConstructionGroup } from '@app/order/shared/contracts/construction-group';
import { Finish } from '@app/order/shared/contracts/finish';
import { PurchaseHistoryViewModel } from '@app/order/shared/viewmodels/purchase-history-viewmodel';
import { OrderDiscrepancy } from '@app/order/shared/contracts/order-discrepancy';
import { PurchaseOrder } from '@app/shared/contracts/purchase-order';
import { ItemAction } from '@app/shared/enums/item-action.enum';

export class EquipmentViewModel implements Equipment, EquipmentCardModel {

    id: string;
    deliveryDate: string;
    departmentDescription: string;
    departmentNumber: string;
    equipmentCode: string;
    equipmentDescription: string;
    previousTotalQuantity: number;
    currentTotalQuantity: number;
    newTotalQuantity: number;
    floorQuantity: Array<
        {
            floor: string;
            quantity: number;
        }>;
    manufacturer: string;
    manufacturerDescription: string;
    purchaseOrderNo: string;
    orderingStatus: string;
    orderingStatusDisplayed: string;
    purchaseOrderDiscrepancies: boolean;
    revisionBulletinNo: string;
    vendor: string;
    category: string;
    comments: Array<CommentViewModel>;
    lastUpdatedOn: string;
    alternateDeliveryLocation: string;
    procurementMethod: string;
    quantityChangeECVerified: boolean;
    finishesSpecificationRequired: boolean;
    finishes: Array<Finish>;
    finishesMissing: boolean;
    finishesFilterString: string;
    orderDiscrepancies: Array<OrderDiscrepancy>;
    hasDiscrepancies: boolean;
    purchaseOrder: PurchaseOrder;
    cutSheets: string;
    purchaseHistory: Array<PurchaseHistoryViewModel>;
    isDeleted: boolean;

    selected: boolean;
    disabled: boolean;
    expanded: boolean;

    hasComments: boolean;

    hasConcurrencyError: boolean;
    constructionGroupName: string;
    constructionGroup: ConstructionGroup;
    orderable: boolean;
    itemAction: ItemAction;
}
