notes for tomorrow:
   - can probably make a new class/method for the different parameter values/types
    - let Jason know we can also set element properties (SetParam or something)...is this what we want to do??
    - how to search for all or new elements in Revit and bring only those guys in? Probably need to do a filter
    - do quick research on UI stuff...what is needed, etc?



  Part 1: On why we should care about Russian hacking in the Rust Belt
 Supposedley the Russians hacked some voting booths and may have influcenced the 2016 presidential election. In fact Reality Winner, the woman from the NSA who supposedley leaked this information to the Intercept back in ____, just pleaded guilty and was sentenced to 5 years in prison.

  But what is more alarming is this news article about how easy it is to hack into this stuff: _____. Also related is how easy it is to hack into satellites and make them do the person's bidding: ____. The Rust Belt is one of the most highly contested regions (SITE) in presidential elections. Ohio, Pennsylvania, and Michigan are huge swing states and the red vs blue line is as this as ever - so one of those states going red (when it actually voted blue) is something that could be believed. Let's be honest, nobody's gonna try to hack a booth in Alabama...if they go for a Democrat candidate in the next election nobody is going to believe the voting booths *weren't* hacked.

So let's break down these stories and give a clearer picture of what they describe. Then talk about how we can make technologies like this even more secure. Finally maybe I'll even use my soapbox to talk about how flawed our voting system is (with or without voting booths and software) and encourage folks to start thinking about preferential voting! Woohoo! Let's do it!

--------------------------------
  --------------------------------
  
Part 2: Htf does one hack into a voting booth (or anything for that matter)?
  So first off, how does one "hack" into a satellite or voting booth (maybe drop the satellite stuff for now). There are usually two ways: 1) steal or guess a user's username and password and gain access that way, or 2) exploit a security flaw in the software that just allows access. #2 is a bit easier to understand, there are all sorts of examples of this (SITE). All those big stories you sometimes see usually involve security issues. One of the craziest I saw was someone hitting the delete button 14 times on a Linux machine which then gave them sudo access. Htf did they figure that out? I just image a room full of monkeys banging on keyboards until they get into the system or Hamlet is written.

  Let's talk about #1. This is some spy stuff here, and it happens all the time. This usually involves some kind of social enginerring - usually someone being tricked into giving up their username/password for a site.Sarah Palin had her Yahoo! account hacked years ago because someone reset her password - they gained access to her email, tried to login, and hit the "I forgot my password" button. They then asked her security questions...the answers to which the hacker was able to guess just from listening to her speeches (for example: "where did you meet your husband?" "In college").

  Another common way hackers gain access are by "phishing attacks." You've probably seen this term come up before...and possibly been confused by it like I usually am, cause it doesn't really make much sense. This usually involves spam email, like one that says "send me your password" or "You need to click THIS LINK to update your password." Everyone at a company, like one of the ones who make voting booth software, all get a spam email saying need to reset their Gmail passwords. But its not from Gmail, its from a hacker. Sometimes these are easy to spot, and you've probably received emails from people like "ALLCAPSNAME@zimbabe.com". These can oftentimes be much more sophisticated however. Now you know why your company makes you take those corporate compliant tests which teach you NOT to respond to emails which sound a bit shady.

  The really  sophisticated ones involve using multiple types of social engineering and trying to get up to a big prize. If I wanted to hack into a voting booth that was being used in November, maybe I'd send everyone at the company an email asking them to reset their password in January. This is a long shot but all I'd need is a single person to click the link and reset it. Then months later I could send another coworker an email from the now-hacked email, asking them to open a program in Microsoft Word...but actually this releases a virus onto their computer which gets into the system. Then come voting day I have access to their system and can hopefully change votes. This sounds far-fetched but in fact SITE: this is exactly what happened in 2016 during the presidential election.

One of the problems is there should be way more failsafes in place than just usernames or passwords. What ever happened to two-factor authentication?!? Let's look at some ways to make these voting systems more secure.

  ------------------------------------------------------
    ------------------------------------------------------
  Part 3: Making voting booths unhackable.
So what can be done: good question. First off let's take the social-engineering aspect from before and apply them to the people actually working at voting stations on election day. While I appreciate the old ladies volunteering their time at my local school on election day, we probably need more tech-saavy folks working at the voting booths. Some shady stuff can go down at voting booths with a bunch of people in line and all the mayhem (SITE/PIC). 

There are only (SITE) XX number of companies who make the software for voting booths. I don't like the federal govt being in charge of too much (or really anything besides education standards and regulations), and similarly I don't think a one-size-fits-all model is a good idea for the software running on voting systems. For one it's a honeypot for hackers - instead of hacking one system/company, now you have to hack 50. Also, different states have different kinds of elections, hold them at different times, etc. More power to the states! For instance, in Iowa they do caucuses, but in Michigan they do primaries. Sticky. Plus it allows the feds to shell out money for others to work...more jobs! Ok this gets around a lot of the social engineering, so how do we make the software running on the booths more secure in the first place?

Blockchain technology can also be used...I don't want to get into this right now but suffice it to say that the same underlying tech used for Bitcoin and other crypto-currencies can also be used to ensure fair voting systems.

Also online voting. It seems that the mainstream politicians don't want to talk about this...even though Democrats are for the people and their rights to vote. Give me a break. The only ones I heard talking about online voting and/or online registration was Jill Stein and Bernie Sanders...SITE? But unfortunately the age-old adage by politicians is that its not "secure." I invite you to read the first part of this blog...our current system is not secure. And in fact they are wrong. We all bank online, why can't we vote online? TALK ABOUT THE SECURITY OF THAT!!! There are all sorts of ways to determine if someone is who they claim to be online. SSN numbers; IP address checking to make sure the person who is voting for a candidate in State A is in State A. If not, there is then the absentee approach. Then once someone votes they're locked out...someone can then log a complaint if they cant get into the system. There are definitely kinks to work out so we should start this on a small scale in local or state elections and then build up to federal ones. Going along with what I mentioned above, f there was more voting online then the federal overnment could contract different companies in each state to design secure websites and apps...again now there are over 50 systems to hack into as opposed to just one or two.

Unfortunately all this does is get us back to square one: we have now ensured that only the people who voted get their votes counted and they were not changed. But this doesn't fix our voting system itself. Read on (the next section is neither about tech nor the Rust Belt, its just my opinions and facts about voting, so feel free to skip).
  
 This involves better crypto on the machines themselves (ie. more jobs for crypto geeks), and better workers monitoring booths (more jobs). 

   Also it means better security audits on the companies that make the voting machines in the first place...more jobs!

  --------------------------------------------------
  --------------------------------------------------

Part 4/Bonus: A better system of voting
In both the last election and the 2000 election between Buch and Gore, the Democrat candidate won the popular vote, yet the Republican won the Electoral College, granting them the presidency. Not surprisingly, this caused many voters to complain and say we should move to having a popular vote. Surprising to some, this is a very bad idea, and in fact the electoral college is vastly superior to this. Unfortunately the electoral college still isn't that great either.

  There are a few reasons why a straight popular vote is ill-advised. If we give the candidate with just the highest percentage of votes. then in a proper two-party system someone would have to get 51% of the votes to win. But we have more than two parties...in the last election there were Green and Libertarian candidates. Suppose Gary Johnson were to get more votes...you coucld end up in a situation where a candidate wins with only 34% of the country voting for them...ie. 66% of the country DID NOT vote for them.
  
  Another issue comes down to how populations are distributed. While we have a big country, the majority of the population lives in a handful of city centers: LA, NY, Houston, etc. 